version: "3.7"

networks:
  my_network:
    driver: bridge

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mydb1
    ports:
      - "27017:27017"
    networks:
      - my_network
    volumes:
      - ./data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./data/db:/data/db
      - ./data/logs/db:/var/log/mongodb
      # - ./backend/data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      # - ./backend/data/db:/data/db
      # - ./backend/data/logs/db:/var/log/mongodb

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: default
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_AUTH_DATABASE: mydb1
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    ports:
      - "8081:8081"
    restart: always
    networks:
      - my_network
    depends_on:
      - mongodb
      
  backend:
    networks:
      - my_network
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - mongodb
    ports:  
      - "3000:3000"
      - "9229:9229"
    environment:
      NODE_ENV: "production"
      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: "mongodb"
      DB_PORT: 27017
      DB_NAME: mydb1
      LOGS_PATH: "./data/logs/pino-logger.log"
    volumes:
      # - "D:/web projects/chat-app/backend/data/logs/pino-logger.log:/node-app/src/data/logs/pino-logger.log"
      # - "D:/web projects/chat-app/backend/src:/src"
      - ./src:/usr/app/src